<html><head>
<script src="cake.js"></script>
<script src="jquery.min.js"></script> <!-- 1.7.1 -->
<script src="classes.js"></script>
<script language="javascript">

// player ship object
player = {};

$(function() {
    // make canvas and world
    canvas = new Canvas(document.getElementById("canvasland"), 500, 500, {
        fill: 'black',
        cursor: 'crosshair'
    });
    world = new World(canvas, 50);
    
    // add/draw the player
    var i = new Image();
    i.onload = function() {
        player = new Ship(140, 140, i, FED, world);
        new Ship(40, 40, i, ROM, world);
    }
    i.src = "AS.png";

    // the world is always centerd on the player
    world.addStepListener(function recenter(callingWorld){
        callingWorld.centerView(player.x, player.y);
    });

    // add planets
    altaris = new Planet(70,70,"Altaris",[FUEL], world);
    vega = new Planet(200,156,"Vega",[], world);

    // UI: set dest heading via right-click
    $(canvas.canvas).bind("contextmenu", function(e) {
        var offset = $(this).offset();
        var offsetX = e.pageX - offset.left;
        var offsetY = e.pageY - offset.top;
        // get the angle
        player.targetHeading = getAngleFromCenter(offsetX, offsetY);
        e.preventDefault();
    });
    
    // UI: fire torps via left-click
    $(canvas.canvas).click(function(e) {
        var offset = $(this).offset();
        var offsetX = e.pageX - offset.left;
        var offsetY = e.pageY - offset.top;
        new Shot(player.x,player.y,getAngleFromCenter(offsetX, offsetY),player.team,world);
        e.preventDefault();
    });
    
    //TODO: UI: fire phasers via middle-click
    $(canvas.canvas).mousedown(function(e) {
        if(e.which==2) {
            var offset = $(this).offset();
            var offsetX = e.pageX - offset.left;
            var offsetY = e.pageY - offset.top;
            // get the angle
            //shootPhasers(-player.x,-player.y,getAngleFromCenter(offsetX, offsetY));
            e.preventDefault();
        }
    });
    
    // let's go!
    world.run();
})

function getAngleFromCenter(offsetX,offsetY) {
    //normalize to canvas cartesian coords
    var carteX = offsetX - canvas.width/2;
    var carteY = canvas.height/2 - offsetY;
    var angle = Math.atan(carteX/carteY);
    // if the click was in a lower quadrent, augment the atan value
    if(carteY<0) {
        angle *= -1;
        if(carteX>0) angle = Math.PI - angle;
        else         angle = -Math.PI - angle;
    }
    return angle;
}

$(document).bind("keyup", function(e) {
    // set speed with number keys
    if(e.which >= 48 && e.which <= 57) {
      player.targetSpeed = (e.which - 48) / 2;
    }
});

function hittest(gfx1,gfx2) {
    var box1 = gfx1.getSubtreeBoundingBox();
    var box2 = gfx2.getSubtreeBoundingBox();
    // test if th ebounding boxes collide; if so, do a slow test; otherwise no collision
    if ((box1[0] + box1[2] >= box2[0]) &&
        (box1[0] <= box2[0] + box2[2]) &&
        (box1[1] + box1[3] >= box2[1]) &&
        (box1[1] <= box2[1] + box2[3])) return true;
    else return false;
}

</script>
</head>
<body>
<div id="canvasland" style="margin-left:auto; margin-right:auto; width: 1200px;"></div>
<div id="hitcanvas" style=""></div>
</body>
</html>
